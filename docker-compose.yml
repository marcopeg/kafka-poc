version: '2'
services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: kafka_poc_zookeper

  kafka:
    image: wurstmeister/kafka:2.11-1.1.1
    container_name: kafka_poc_broker
    depends_on:
      - zookeeper
    links:
      - zookeeper
    ports:
      - '${KAFKA_PORT:-9092}:9092'
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${CODE_SERVER_IPv4_LOCAL}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
    volumes:
      - .docker-data/kafka:/kafka

  postgres:
    image: postgres:13.1
    container_name: kafka_poc_postgres
    restart: always
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    volumes:
      - ./.docker-data/pg:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}

  rest_api:
    container_name: kafka_poc_rest_api
    image: node:12
    restart: on-failure
    depends_on:
      - postgres
    environment:
      NODE_ENV: development
      PGSTRING: postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/postgres
      KAFKA_BROKER: 'kafka:9092'
    volumes:
      - .docker-data/node_modules:/usr/src/app/node_modules:cached
      - ./package.json:/usr/src/app/package.json:delegated
      - ./package-lock.json:/usr/src/app/package-lock.json:delegated
      - ./src:/usr/src/app/src:delegated
    working_dir: /usr/src/app
    entrypoint: ['npm', 'run', 'start:docker']
    expose:
      - 8080
    labels:
      - 'traefik.enable=true'

      # Configure basic HTTP mapping:
      - 'traefik.http.routers.kafka-poc--80.entrypoints=http80'
      - 'traefik.http.routers.kafka-poc--80.rule=Host(`${CODE_SERVER_DNS}`) && PathPrefix(`/kafka-poc`)'
      - 'traefik.http.routers.kafka-poc--80.middlewares=csi-redirect'

      # Configure HTTPS mapping with automatic Letsencrypt certificate management
      - 'traefik.http.routers.kafka-poc--443.tls=true'
      - 'traefik.http.routers.kafka-poc--443.entrypoints=http443'
      - 'traefik.http.routers.kafka-poc--443.tls.certresolver=letsencrypt'
      - 'traefik.http.routers.kafka-poc--443.rule=Host(`${CODE_SERVER_DNS}`) && PathPrefix(`/kafka-poc`)'
      - 'traefik.http.routers.kafka-poc--443.middlewares=kafka-poc--prefix'

      # Configure middlewares:
      - 'traefik.http.middlewares.kafka-poc--prefix.stripprefix.prefixes=/kafka-poc'
